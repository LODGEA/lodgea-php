<?php
/**
 * V1AvailabilitySearchPost200ResponseListInner
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * lodgea-php
 *
 * LODGEA SDK for PHP. Check out https://lodgea.redoc.ly for more information.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@lodgea.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * V1AvailabilitySearchPost200ResponseListInner Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class V1AvailabilitySearchPost200ResponseListInner implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = '_v1_availability_search_post_200_response_list_inner';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'code' => 'string',
        'language_code' => 'string',
        'currency_code' => 'string',
        'unit_system' => 'string',
        'name' => 'string',
        'uri' => 'string',
        'service_list' => 'float[]',
        'category_list' => 'float[]',
        'uri_path' => 'string',
        'text' => 'string',
        'geo' => '\OpenAPI\Client\Model\V1AvailabilitySearchPost200ResponseListInnerGeo',
        'media_list' => '\OpenAPI\Client\Model\V1AvailabilitySearchPost200ResponseListInnerMediaListInner[]',
        'attraction_list' => '\OpenAPI\Client\Model\V1AvailabilitySearchPost200ResponseListInnerAttractionListInner[]',
        'lowest_price' => '\OpenAPI\Client\Model\V1AvailabilitySearchPost200ResponseListInnerLowestPrice'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'code' => null,
        'language_code' => null,
        'currency_code' => null,
        'unit_system' => null,
        'name' => null,
        'uri' => null,
        'service_list' => null,
        'category_list' => null,
        'uri_path' => null,
        'text' => null,
        'geo' => null,
        'media_list' => null,
        'attraction_list' => null,
        'lowest_price' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'code' => 'code',
        'language_code' => 'languageCode',
        'currency_code' => 'currencyCode',
        'unit_system' => 'unitSystem',
        'name' => 'name',
        'uri' => 'uri',
        'service_list' => 'serviceList',
        'category_list' => 'categoryList',
        'uri_path' => 'uriPath',
        'text' => 'text',
        'geo' => 'geo',
        'media_list' => 'mediaList',
        'attraction_list' => 'attractionList',
        'lowest_price' => 'lowestPrice'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'code' => 'setCode',
        'language_code' => 'setLanguageCode',
        'currency_code' => 'setCurrencyCode',
        'unit_system' => 'setUnitSystem',
        'name' => 'setName',
        'uri' => 'setUri',
        'service_list' => 'setServiceList',
        'category_list' => 'setCategoryList',
        'uri_path' => 'setUriPath',
        'text' => 'setText',
        'geo' => 'setGeo',
        'media_list' => 'setMediaList',
        'attraction_list' => 'setAttractionList',
        'lowest_price' => 'setLowestPrice'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'code' => 'getCode',
        'language_code' => 'getLanguageCode',
        'currency_code' => 'getCurrencyCode',
        'unit_system' => 'getUnitSystem',
        'name' => 'getName',
        'uri' => 'getUri',
        'service_list' => 'getServiceList',
        'category_list' => 'getCategoryList',
        'uri_path' => 'getUriPath',
        'text' => 'getText',
        'geo' => 'getGeo',
        'media_list' => 'getMediaList',
        'attraction_list' => 'getAttractionList',
        'lowest_price' => 'getLowestPrice'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['code'] = $data['code'] ?? null;
        $this->container['language_code'] = $data['language_code'] ?? null;
        $this->container['currency_code'] = $data['currency_code'] ?? null;
        $this->container['unit_system'] = $data['unit_system'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
        $this->container['uri'] = $data['uri'] ?? null;
        $this->container['service_list'] = $data['service_list'] ?? null;
        $this->container['category_list'] = $data['category_list'] ?? null;
        $this->container['uri_path'] = $data['uri_path'] ?? null;
        $this->container['text'] = $data['text'] ?? null;
        $this->container['geo'] = $data['geo'] ?? null;
        $this->container['media_list'] = $data['media_list'] ?? null;
        $this->container['attraction_list'] = $data['attraction_list'] ?? null;
        $this->container['lowest_price'] = $data['lowest_price'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets code
     *
     * @return string|null
     */
    public function getCode()
    {
        return $this->container['code'];
    }

    /**
     * Sets code
     *
     * @param string|null $code code
     *
     * @return self
     */
    public function setCode($code)
    {
        $this->container['code'] = $code;

        return $this;
    }

    /**
     * Gets language_code
     *
     * @return string|null
     */
    public function getLanguageCode()
    {
        return $this->container['language_code'];
    }

    /**
     * Sets language_code
     *
     * @param string|null $language_code language_code
     *
     * @return self
     */
    public function setLanguageCode($language_code)
    {
        $this->container['language_code'] = $language_code;

        return $this;
    }

    /**
     * Gets currency_code
     *
     * @return string|null
     */
    public function getCurrencyCode()
    {
        return $this->container['currency_code'];
    }

    /**
     * Sets currency_code
     *
     * @param string|null $currency_code currency_code
     *
     * @return self
     */
    public function setCurrencyCode($currency_code)
    {
        $this->container['currency_code'] = $currency_code;

        return $this;
    }

    /**
     * Gets unit_system
     *
     * @return string|null
     */
    public function getUnitSystem()
    {
        return $this->container['unit_system'];
    }

    /**
     * Sets unit_system
     *
     * @param string|null $unit_system unit_system
     *
     * @return self
     */
    public function setUnitSystem($unit_system)
    {
        $this->container['unit_system'] = $unit_system;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name name
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets uri
     *
     * @return string|null
     */
    public function getUri()
    {
        return $this->container['uri'];
    }

    /**
     * Sets uri
     *
     * @param string|null $uri uri
     *
     * @return self
     */
    public function setUri($uri)
    {
        $this->container['uri'] = $uri;

        return $this;
    }

    /**
     * Gets service_list
     *
     * @return float[]|null
     */
    public function getServiceList()
    {
        return $this->container['service_list'];
    }

    /**
     * Sets service_list
     *
     * @param float[]|null $service_list service_list
     *
     * @return self
     */
    public function setServiceList($service_list)
    {
        $this->container['service_list'] = $service_list;

        return $this;
    }

    /**
     * Gets category_list
     *
     * @return float[]|null
     */
    public function getCategoryList()
    {
        return $this->container['category_list'];
    }

    /**
     * Sets category_list
     *
     * @param float[]|null $category_list category_list
     *
     * @return self
     */
    public function setCategoryList($category_list)
    {
        $this->container['category_list'] = $category_list;

        return $this;
    }

    /**
     * Gets uri_path
     *
     * @return string|null
     */
    public function getUriPath()
    {
        return $this->container['uri_path'];
    }

    /**
     * Sets uri_path
     *
     * @param string|null $uri_path uri_path
     *
     * @return self
     */
    public function setUriPath($uri_path)
    {
        $this->container['uri_path'] = $uri_path;

        return $this;
    }

    /**
     * Gets text
     *
     * @return string|null
     */
    public function getText()
    {
        return $this->container['text'];
    }

    /**
     * Sets text
     *
     * @param string|null $text text
     *
     * @return self
     */
    public function setText($text)
    {
        $this->container['text'] = $text;

        return $this;
    }

    /**
     * Gets geo
     *
     * @return \OpenAPI\Client\Model\V1AvailabilitySearchPost200ResponseListInnerGeo|null
     */
    public function getGeo()
    {
        return $this->container['geo'];
    }

    /**
     * Sets geo
     *
     * @param \OpenAPI\Client\Model\V1AvailabilitySearchPost200ResponseListInnerGeo|null $geo geo
     *
     * @return self
     */
    public function setGeo($geo)
    {
        $this->container['geo'] = $geo;

        return $this;
    }

    /**
     * Gets media_list
     *
     * @return \OpenAPI\Client\Model\V1AvailabilitySearchPost200ResponseListInnerMediaListInner[]|null
     */
    public function getMediaList()
    {
        return $this->container['media_list'];
    }

    /**
     * Sets media_list
     *
     * @param \OpenAPI\Client\Model\V1AvailabilitySearchPost200ResponseListInnerMediaListInner[]|null $media_list media_list
     *
     * @return self
     */
    public function setMediaList($media_list)
    {
        $this->container['media_list'] = $media_list;

        return $this;
    }

    /**
     * Gets attraction_list
     *
     * @return \OpenAPI\Client\Model\V1AvailabilitySearchPost200ResponseListInnerAttractionListInner[]|null
     */
    public function getAttractionList()
    {
        return $this->container['attraction_list'];
    }

    /**
     * Sets attraction_list
     *
     * @param \OpenAPI\Client\Model\V1AvailabilitySearchPost200ResponseListInnerAttractionListInner[]|null $attraction_list attraction_list
     *
     * @return self
     */
    public function setAttractionList($attraction_list)
    {
        $this->container['attraction_list'] = $attraction_list;

        return $this;
    }

    /**
     * Gets lowest_price
     *
     * @return \OpenAPI\Client\Model\V1AvailabilitySearchPost200ResponseListInnerLowestPrice|null
     */
    public function getLowestPrice()
    {
        return $this->container['lowest_price'];
    }

    /**
     * Sets lowest_price
     *
     * @param \OpenAPI\Client\Model\V1AvailabilitySearchPost200ResponseListInnerLowestPrice|null $lowest_price lowest_price
     *
     * @return self
     */
    public function setLowestPrice($lowest_price)
    {
        $this->container['lowest_price'] = $lowest_price;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


