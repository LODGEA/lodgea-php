<?php
/**
 * V1PropertyGetPost200ResponseProductListInnerRatePlanListInnerPricingListInnerPriceList
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  com.lodgea
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * lodgea-php
 *
 * LODGEA SDK for PHP. Check out https://docs.lodgea.io for more information.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@lodgea.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace com.lodgea\com.lodgea.model;

use \ArrayAccess;
use \com.lodgea\ObjectSerializer;

/**
 * V1PropertyGetPost200ResponseProductListInnerRatePlanListInnerPricingListInnerPriceList Class Doc Comment
 *
 * @category Class
 * @package  com.lodgea
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class V1PropertyGetPost200ResponseProductListInnerRatePlanListInnerPricingListInnerPriceList implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = '_v1_property_get_post_200_response_productList_inner_ratePlanList_inner_pricingList_inner_priceList';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        '_4' => 'float',
        '_5' => 'float',
        '_6' => 'float',
        '_7' => 'float',
        '_8' => 'float',
        '_9' => 'float',
        '_10' => 'float',
        '_11' => 'float',
        '_12' => 'float',
        '_13' => 'float',
        '_14' => 'float',
        '_15' => 'float',
        '_16' => 'float',
        '_17' => 'float',
        '_18' => 'float',
        '_19' => 'float',
        '_20' => 'float',
        '_21' => 'float',
        '_22' => 'float',
        '_23' => 'float'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        '_4' => null,
        '_5' => null,
        '_6' => null,
        '_7' => null,
        '_8' => null,
        '_9' => null,
        '_10' => null,
        '_11' => null,
        '_12' => null,
        '_13' => null,
        '_14' => null,
        '_15' => null,
        '_16' => null,
        '_17' => null,
        '_18' => null,
        '_19' => null,
        '_20' => null,
        '_21' => null,
        '_22' => null,
        '_23' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        '_4' => '4',
        '_5' => '5',
        '_6' => '6',
        '_7' => '7',
        '_8' => '8',
        '_9' => '9',
        '_10' => '10',
        '_11' => '11',
        '_12' => '12',
        '_13' => '13',
        '_14' => '14',
        '_15' => '15',
        '_16' => '16',
        '_17' => '17',
        '_18' => '18',
        '_19' => '19',
        '_20' => '20',
        '_21' => '21',
        '_22' => '22',
        '_23' => '23'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        '_4' => 'set4',
        '_5' => 'set5',
        '_6' => 'set6',
        '_7' => 'set7',
        '_8' => 'set8',
        '_9' => 'set9',
        '_10' => 'set10',
        '_11' => 'set11',
        '_12' => 'set12',
        '_13' => 'set13',
        '_14' => 'set14',
        '_15' => 'set15',
        '_16' => 'set16',
        '_17' => 'set17',
        '_18' => 'set18',
        '_19' => 'set19',
        '_20' => 'set20',
        '_21' => 'set21',
        '_22' => 'set22',
        '_23' => 'set23'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        '_4' => 'get4',
        '_5' => 'get5',
        '_6' => 'get6',
        '_7' => 'get7',
        '_8' => 'get8',
        '_9' => 'get9',
        '_10' => 'get10',
        '_11' => 'get11',
        '_12' => 'get12',
        '_13' => 'get13',
        '_14' => 'get14',
        '_15' => 'get15',
        '_16' => 'get16',
        '_17' => 'get17',
        '_18' => 'get18',
        '_19' => 'get19',
        '_20' => 'get20',
        '_21' => 'get21',
        '_22' => 'get22',
        '_23' => 'get23'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['_4'] = $data['_4'] ?? null;
        $this->container['_5'] = $data['_5'] ?? null;
        $this->container['_6'] = $data['_6'] ?? null;
        $this->container['_7'] = $data['_7'] ?? null;
        $this->container['_8'] = $data['_8'] ?? null;
        $this->container['_9'] = $data['_9'] ?? null;
        $this->container['_10'] = $data['_10'] ?? null;
        $this->container['_11'] = $data['_11'] ?? null;
        $this->container['_12'] = $data['_12'] ?? null;
        $this->container['_13'] = $data['_13'] ?? null;
        $this->container['_14'] = $data['_14'] ?? null;
        $this->container['_15'] = $data['_15'] ?? null;
        $this->container['_16'] = $data['_16'] ?? null;
        $this->container['_17'] = $data['_17'] ?? null;
        $this->container['_18'] = $data['_18'] ?? null;
        $this->container['_19'] = $data['_19'] ?? null;
        $this->container['_20'] = $data['_20'] ?? null;
        $this->container['_21'] = $data['_21'] ?? null;
        $this->container['_22'] = $data['_22'] ?? null;
        $this->container['_23'] = $data['_23'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets _4
     *
     * @return float|null
     */
    public function get4()
    {
        return $this->container['_4'];
    }

    /**
     * Sets _4
     *
     * @param float|null $_4 _4
     *
     * @return self
     */
    public function set4($_4)
    {
        $this->container['_4'] = $_4;

        return $this;
    }

    /**
     * Gets _5
     *
     * @return float|null
     */
    public function get5()
    {
        return $this->container['_5'];
    }

    /**
     * Sets _5
     *
     * @param float|null $_5 _5
     *
     * @return self
     */
    public function set5($_5)
    {
        $this->container['_5'] = $_5;

        return $this;
    }

    /**
     * Gets _6
     *
     * @return float|null
     */
    public function get6()
    {
        return $this->container['_6'];
    }

    /**
     * Sets _6
     *
     * @param float|null $_6 _6
     *
     * @return self
     */
    public function set6($_6)
    {
        $this->container['_6'] = $_6;

        return $this;
    }

    /**
     * Gets _7
     *
     * @return float|null
     */
    public function get7()
    {
        return $this->container['_7'];
    }

    /**
     * Sets _7
     *
     * @param float|null $_7 _7
     *
     * @return self
     */
    public function set7($_7)
    {
        $this->container['_7'] = $_7;

        return $this;
    }

    /**
     * Gets _8
     *
     * @return float|null
     */
    public function get8()
    {
        return $this->container['_8'];
    }

    /**
     * Sets _8
     *
     * @param float|null $_8 _8
     *
     * @return self
     */
    public function set8($_8)
    {
        $this->container['_8'] = $_8;

        return $this;
    }

    /**
     * Gets _9
     *
     * @return float|null
     */
    public function get9()
    {
        return $this->container['_9'];
    }

    /**
     * Sets _9
     *
     * @param float|null $_9 _9
     *
     * @return self
     */
    public function set9($_9)
    {
        $this->container['_9'] = $_9;

        return $this;
    }

    /**
     * Gets _10
     *
     * @return float|null
     */
    public function get10()
    {
        return $this->container['_10'];
    }

    /**
     * Sets _10
     *
     * @param float|null $_10 _10
     *
     * @return self
     */
    public function set10($_10)
    {
        $this->container['_10'] = $_10;

        return $this;
    }

    /**
     * Gets _11
     *
     * @return float|null
     */
    public function get11()
    {
        return $this->container['_11'];
    }

    /**
     * Sets _11
     *
     * @param float|null $_11 _11
     *
     * @return self
     */
    public function set11($_11)
    {
        $this->container['_11'] = $_11;

        return $this;
    }

    /**
     * Gets _12
     *
     * @return float|null
     */
    public function get12()
    {
        return $this->container['_12'];
    }

    /**
     * Sets _12
     *
     * @param float|null $_12 _12
     *
     * @return self
     */
    public function set12($_12)
    {
        $this->container['_12'] = $_12;

        return $this;
    }

    /**
     * Gets _13
     *
     * @return float|null
     */
    public function get13()
    {
        return $this->container['_13'];
    }

    /**
     * Sets _13
     *
     * @param float|null $_13 _13
     *
     * @return self
     */
    public function set13($_13)
    {
        $this->container['_13'] = $_13;

        return $this;
    }

    /**
     * Gets _14
     *
     * @return float|null
     */
    public function get14()
    {
        return $this->container['_14'];
    }

    /**
     * Sets _14
     *
     * @param float|null $_14 _14
     *
     * @return self
     */
    public function set14($_14)
    {
        $this->container['_14'] = $_14;

        return $this;
    }

    /**
     * Gets _15
     *
     * @return float|null
     */
    public function get15()
    {
        return $this->container['_15'];
    }

    /**
     * Sets _15
     *
     * @param float|null $_15 _15
     *
     * @return self
     */
    public function set15($_15)
    {
        $this->container['_15'] = $_15;

        return $this;
    }

    /**
     * Gets _16
     *
     * @return float|null
     */
    public function get16()
    {
        return $this->container['_16'];
    }

    /**
     * Sets _16
     *
     * @param float|null $_16 _16
     *
     * @return self
     */
    public function set16($_16)
    {
        $this->container['_16'] = $_16;

        return $this;
    }

    /**
     * Gets _17
     *
     * @return float|null
     */
    public function get17()
    {
        return $this->container['_17'];
    }

    /**
     * Sets _17
     *
     * @param float|null $_17 _17
     *
     * @return self
     */
    public function set17($_17)
    {
        $this->container['_17'] = $_17;

        return $this;
    }

    /**
     * Gets _18
     *
     * @return float|null
     */
    public function get18()
    {
        return $this->container['_18'];
    }

    /**
     * Sets _18
     *
     * @param float|null $_18 _18
     *
     * @return self
     */
    public function set18($_18)
    {
        $this->container['_18'] = $_18;

        return $this;
    }

    /**
     * Gets _19
     *
     * @return float|null
     */
    public function get19()
    {
        return $this->container['_19'];
    }

    /**
     * Sets _19
     *
     * @param float|null $_19 _19
     *
     * @return self
     */
    public function set19($_19)
    {
        $this->container['_19'] = $_19;

        return $this;
    }

    /**
     * Gets _20
     *
     * @return float|null
     */
    public function get20()
    {
        return $this->container['_20'];
    }

    /**
     * Sets _20
     *
     * @param float|null $_20 _20
     *
     * @return self
     */
    public function set20($_20)
    {
        $this->container['_20'] = $_20;

        return $this;
    }

    /**
     * Gets _21
     *
     * @return float|null
     */
    public function get21()
    {
        return $this->container['_21'];
    }

    /**
     * Sets _21
     *
     * @param float|null $_21 _21
     *
     * @return self
     */
    public function set21($_21)
    {
        $this->container['_21'] = $_21;

        return $this;
    }

    /**
     * Gets _22
     *
     * @return float|null
     */
    public function get22()
    {
        return $this->container['_22'];
    }

    /**
     * Sets _22
     *
     * @param float|null $_22 _22
     *
     * @return self
     */
    public function set22($_22)
    {
        $this->container['_22'] = $_22;

        return $this;
    }

    /**
     * Gets _23
     *
     * @return float|null
     */
    public function get23()
    {
        return $this->container['_23'];
    }

    /**
     * Sets _23
     *
     * @param float|null $_23 _23
     *
     * @return self
     */
    public function set23($_23)
    {
        $this->container['_23'] = $_23;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


