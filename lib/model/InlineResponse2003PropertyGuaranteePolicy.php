<?php
/**
 * InlineResponse2003PropertyGuaranteePolicy
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  com.lodgea
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * lodgea-php
 *
 * LODGEA SDK for php. Check out https://docs.lodgea.io for more information.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support@lodgea.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace com.lodgea\com.lodgea.model;

use \ArrayAccess;
use \com.lodgea\ObjectSerializer;

/**
 * InlineResponse2003PropertyGuaranteePolicy Class Doc Comment
 *
 * @category Class
 * @description Defines the guarantee amount that has to be paid to the property.
 * @package  com.lodgea
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class InlineResponse2003PropertyGuaranteePolicy implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'inline_response_200_3_property_guaranteePolicy';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'percent_after_reservation' => 'float',
        'nights_after_reservation' => 'float',
        'deadline_days' => 'float',
        'deadline_hours' => 'float',
        'percent_after_deadline' => 'float',
        'nights_after_deadline' => 'float',
        'no_show_policy' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'percent_after_reservation' => null,
        'nights_after_reservation' => null,
        'deadline_days' => null,
        'deadline_hours' => null,
        'percent_after_deadline' => null,
        'nights_after_deadline' => null,
        'no_show_policy' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'percent_after_reservation' => 'percentAfterReservation',
        'nights_after_reservation' => 'nightsAfterReservation',
        'deadline_days' => 'deadlineDays',
        'deadline_hours' => 'deadlineHours',
        'percent_after_deadline' => 'percentAfterDeadline',
        'nights_after_deadline' => 'nightsAfterDeadline',
        'no_show_policy' => 'noShowPolicy'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'percent_after_reservation' => 'setPercentAfterReservation',
        'nights_after_reservation' => 'setNightsAfterReservation',
        'deadline_days' => 'setDeadlineDays',
        'deadline_hours' => 'setDeadlineHours',
        'percent_after_deadline' => 'setPercentAfterDeadline',
        'nights_after_deadline' => 'setNightsAfterDeadline',
        'no_show_policy' => 'setNoShowPolicy'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'percent_after_reservation' => 'getPercentAfterReservation',
        'nights_after_reservation' => 'getNightsAfterReservation',
        'deadline_days' => 'getDeadlineDays',
        'deadline_hours' => 'getDeadlineHours',
        'percent_after_deadline' => 'getPercentAfterDeadline',
        'nights_after_deadline' => 'getNightsAfterDeadline',
        'no_show_policy' => 'getNoShowPolicy'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['percent_after_reservation'] = $data['percent_after_reservation'] ?? null;
        $this->container['nights_after_reservation'] = $data['nights_after_reservation'] ?? null;
        $this->container['deadline_days'] = $data['deadline_days'] ?? null;
        $this->container['deadline_hours'] = $data['deadline_hours'] ?? null;
        $this->container['percent_after_deadline'] = $data['percent_after_deadline'] ?? null;
        $this->container['nights_after_deadline'] = $data['nights_after_deadline'] ?? null;
        $this->container['no_show_policy'] = $data['no_show_policy'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['percent_after_reservation'] === null) {
            $invalidProperties[] = "'percent_after_reservation' can't be null";
        }
        if ($this->container['nights_after_reservation'] === null) {
            $invalidProperties[] = "'nights_after_reservation' can't be null";
        }
        if ($this->container['deadline_days'] === null) {
            $invalidProperties[] = "'deadline_days' can't be null";
        }
        if ($this->container['deadline_hours'] === null) {
            $invalidProperties[] = "'deadline_hours' can't be null";
        }
        if ($this->container['percent_after_deadline'] === null) {
            $invalidProperties[] = "'percent_after_deadline' can't be null";
        }
        if ($this->container['nights_after_deadline'] === null) {
            $invalidProperties[] = "'nights_after_deadline' can't be null";
        }
        if ($this->container['no_show_policy'] === null) {
            $invalidProperties[] = "'no_show_policy' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets percent_after_reservation
     *
     * @return float
     */
    public function getPercentAfterReservation()
    {
        return $this->container['percent_after_reservation'];
    }

    /**
     * Sets percent_after_reservation
     *
     * @param float $percent_after_reservation Percentage of refund after reservation.
     *
     * @return self
     */
    public function setPercentAfterReservation($percent_after_reservation)
    {
        $this->container['percent_after_reservation'] = $percent_after_reservation;

        return $this;
    }

    /**
     * Gets nights_after_reservation
     *
     * @return float
     */
    public function getNightsAfterReservation()
    {
        return $this->container['nights_after_reservation'];
    }

    /**
     * Sets nights_after_reservation
     *
     * @param float $nights_after_reservation Number of nights after reservation.
     *
     * @return self
     */
    public function setNightsAfterReservation($nights_after_reservation)
    {
        $this->container['nights_after_reservation'] = $nights_after_reservation;

        return $this;
    }

    /**
     * Gets deadline_days
     *
     * @return float
     */
    public function getDeadlineDays()
    {
        return $this->container['deadline_days'];
    }

    /**
     * Sets deadline_days
     *
     * @param float $deadline_days Deadline in days.
     *
     * @return self
     */
    public function setDeadlineDays($deadline_days)
    {
        $this->container['deadline_days'] = $deadline_days;

        return $this;
    }

    /**
     * Gets deadline_hours
     *
     * @return float
     */
    public function getDeadlineHours()
    {
        return $this->container['deadline_hours'];
    }

    /**
     * Sets deadline_hours
     *
     * @param float $deadline_hours Deadline in hours.
     *
     * @return self
     */
    public function setDeadlineHours($deadline_hours)
    {
        $this->container['deadline_hours'] = $deadline_hours;

        return $this;
    }

    /**
     * Gets percent_after_deadline
     *
     * @return float
     */
    public function getPercentAfterDeadline()
    {
        return $this->container['percent_after_deadline'];
    }

    /**
     * Sets percent_after_deadline
     *
     * @param float $percent_after_deadline Percentage of refund after deadline.
     *
     * @return self
     */
    public function setPercentAfterDeadline($percent_after_deadline)
    {
        $this->container['percent_after_deadline'] = $percent_after_deadline;

        return $this;
    }

    /**
     * Gets nights_after_deadline
     *
     * @return float
     */
    public function getNightsAfterDeadline()
    {
        return $this->container['nights_after_deadline'];
    }

    /**
     * Sets nights_after_deadline
     *
     * @param float $nights_after_deadline Number of nights after deadline.
     *
     * @return self
     */
    public function setNightsAfterDeadline($nights_after_deadline)
    {
        $this->container['nights_after_deadline'] = $nights_after_deadline;

        return $this;
    }

    /**
     * Gets no_show_policy
     *
     * @return string
     */
    public function getNoShowPolicy()
    {
        return $this->container['no_show_policy'];
    }

    /**
     * Sets no_show_policy
     *
     * @param string $no_show_policy No-show policy
     *
     * @return self
     */
    public function setNoShowPolicy($no_show_policy)
    {
        $this->container['no_show_policy'] = $no_show_policy;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


