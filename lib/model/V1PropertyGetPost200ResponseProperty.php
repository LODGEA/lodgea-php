<?php
/**
 * V1PropertyGetPost200ResponseProperty
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  com.lodgea
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * lodgea-php
 *
 * LODGEA SDK for PHP. Check out https://docs.lodgea.io for more information.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@lodgea.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace com.lodgea\com.lodgea.model;

use \ArrayAccess;
use \com.lodgea\ObjectSerializer;

/**
 * V1PropertyGetPost200ResponseProperty Class Doc Comment
 *
 * @category Class
 * @package  com.lodgea
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class V1PropertyGetPost200ResponseProperty implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = '_v1_property_get_post_200_response_property';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'code' => 'string',
        'name' => 'string',
        'record_created' => '\com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyRecordCreated',
        'record_modified' => '\com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyRecordModified',
        'property_info' => '\com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyPropertyInfo',
        'guest_info' => '\com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyGuestInfo',
        'award_list' => '\com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyAwardListInner[]',
        'contact_list' => '\com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyContactListInner[]',
        'facility_info' => '\com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyFacilityInfo',
        'media_list' => '\com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyMediaListInner[]',
        'geo' => '\com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyGeo',
        'refinement_date' => 'float',
        'published' => 'bool',
        'policy_list' => '\com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyPolicyListInner[]',
        'uri' => 'string',
        'transaction' => '\com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyTransaction',
        'cancellation_grace_period' => '\com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyCancellationGracePeriod',
        'service_list' => '\com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyServiceListInner[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'code' => null,
        'name' => null,
        'record_created' => null,
        'record_modified' => null,
        'property_info' => null,
        'guest_info' => null,
        'award_list' => null,
        'contact_list' => null,
        'facility_info' => null,
        'media_list' => null,
        'geo' => null,
        'refinement_date' => null,
        'published' => null,
        'policy_list' => null,
        'uri' => null,
        'transaction' => null,
        'cancellation_grace_period' => null,
        'service_list' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'code' => 'code',
        'name' => 'name',
        'record_created' => 'recordCreated',
        'record_modified' => 'recordModified',
        'property_info' => 'propertyInfo',
        'guest_info' => 'guestInfo',
        'award_list' => 'awardList',
        'contact_list' => 'contactList',
        'facility_info' => 'facilityInfo',
        'media_list' => 'mediaList',
        'geo' => 'geo',
        'refinement_date' => 'refinementDate',
        'published' => 'published',
        'policy_list' => 'policyList',
        'uri' => 'uri',
        'transaction' => 'transaction',
        'cancellation_grace_period' => 'cancellationGracePeriod',
        'service_list' => 'serviceList'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'code' => 'setCode',
        'name' => 'setName',
        'record_created' => 'setRecordCreated',
        'record_modified' => 'setRecordModified',
        'property_info' => 'setPropertyInfo',
        'guest_info' => 'setGuestInfo',
        'award_list' => 'setAwardList',
        'contact_list' => 'setContactList',
        'facility_info' => 'setFacilityInfo',
        'media_list' => 'setMediaList',
        'geo' => 'setGeo',
        'refinement_date' => 'setRefinementDate',
        'published' => 'setPublished',
        'policy_list' => 'setPolicyList',
        'uri' => 'setUri',
        'transaction' => 'setTransaction',
        'cancellation_grace_period' => 'setCancellationGracePeriod',
        'service_list' => 'setServiceList'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'code' => 'getCode',
        'name' => 'getName',
        'record_created' => 'getRecordCreated',
        'record_modified' => 'getRecordModified',
        'property_info' => 'getPropertyInfo',
        'guest_info' => 'getGuestInfo',
        'award_list' => 'getAwardList',
        'contact_list' => 'getContactList',
        'facility_info' => 'getFacilityInfo',
        'media_list' => 'getMediaList',
        'geo' => 'getGeo',
        'refinement_date' => 'getRefinementDate',
        'published' => 'getPublished',
        'policy_list' => 'getPolicyList',
        'uri' => 'getUri',
        'transaction' => 'getTransaction',
        'cancellation_grace_period' => 'getCancellationGracePeriod',
        'service_list' => 'getServiceList'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['code'] = $data['code'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
        $this->container['record_created'] = $data['record_created'] ?? null;
        $this->container['record_modified'] = $data['record_modified'] ?? null;
        $this->container['property_info'] = $data['property_info'] ?? null;
        $this->container['guest_info'] = $data['guest_info'] ?? null;
        $this->container['award_list'] = $data['award_list'] ?? null;
        $this->container['contact_list'] = $data['contact_list'] ?? null;
        $this->container['facility_info'] = $data['facility_info'] ?? null;
        $this->container['media_list'] = $data['media_list'] ?? null;
        $this->container['geo'] = $data['geo'] ?? null;
        $this->container['refinement_date'] = $data['refinement_date'] ?? null;
        $this->container['published'] = $data['published'] ?? null;
        $this->container['policy_list'] = $data['policy_list'] ?? null;
        $this->container['uri'] = $data['uri'] ?? null;
        $this->container['transaction'] = $data['transaction'] ?? null;
        $this->container['cancellation_grace_period'] = $data['cancellation_grace_period'] ?? null;
        $this->container['service_list'] = $data['service_list'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets code
     *
     * @return string|null
     */
    public function getCode()
    {
        return $this->container['code'];
    }

    /**
     * Sets code
     *
     * @param string|null $code code
     *
     * @return self
     */
    public function setCode($code)
    {
        $this->container['code'] = $code;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name name
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets record_created
     *
     * @return \com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyRecordCreated|null
     */
    public function getRecordCreated()
    {
        return $this->container['record_created'];
    }

    /**
     * Sets record_created
     *
     * @param \com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyRecordCreated|null $record_created record_created
     *
     * @return self
     */
    public function setRecordCreated($record_created)
    {
        $this->container['record_created'] = $record_created;

        return $this;
    }

    /**
     * Gets record_modified
     *
     * @return \com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyRecordModified|null
     */
    public function getRecordModified()
    {
        return $this->container['record_modified'];
    }

    /**
     * Sets record_modified
     *
     * @param \com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyRecordModified|null $record_modified record_modified
     *
     * @return self
     */
    public function setRecordModified($record_modified)
    {
        $this->container['record_modified'] = $record_modified;

        return $this;
    }

    /**
     * Gets property_info
     *
     * @return \com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyPropertyInfo|null
     */
    public function getPropertyInfo()
    {
        return $this->container['property_info'];
    }

    /**
     * Sets property_info
     *
     * @param \com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyPropertyInfo|null $property_info property_info
     *
     * @return self
     */
    public function setPropertyInfo($property_info)
    {
        $this->container['property_info'] = $property_info;

        return $this;
    }

    /**
     * Gets guest_info
     *
     * @return \com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyGuestInfo|null
     */
    public function getGuestInfo()
    {
        return $this->container['guest_info'];
    }

    /**
     * Sets guest_info
     *
     * @param \com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyGuestInfo|null $guest_info guest_info
     *
     * @return self
     */
    public function setGuestInfo($guest_info)
    {
        $this->container['guest_info'] = $guest_info;

        return $this;
    }

    /**
     * Gets award_list
     *
     * @return \com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyAwardListInner[]|null
     */
    public function getAwardList()
    {
        return $this->container['award_list'];
    }

    /**
     * Sets award_list
     *
     * @param \com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyAwardListInner[]|null $award_list award_list
     *
     * @return self
     */
    public function setAwardList($award_list)
    {
        $this->container['award_list'] = $award_list;

        return $this;
    }

    /**
     * Gets contact_list
     *
     * @return \com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyContactListInner[]|null
     */
    public function getContactList()
    {
        return $this->container['contact_list'];
    }

    /**
     * Sets contact_list
     *
     * @param \com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyContactListInner[]|null $contact_list contact_list
     *
     * @return self
     */
    public function setContactList($contact_list)
    {
        $this->container['contact_list'] = $contact_list;

        return $this;
    }

    /**
     * Gets facility_info
     *
     * @return \com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyFacilityInfo|null
     */
    public function getFacilityInfo()
    {
        return $this->container['facility_info'];
    }

    /**
     * Sets facility_info
     *
     * @param \com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyFacilityInfo|null $facility_info facility_info
     *
     * @return self
     */
    public function setFacilityInfo($facility_info)
    {
        $this->container['facility_info'] = $facility_info;

        return $this;
    }

    /**
     * Gets media_list
     *
     * @return \com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyMediaListInner[]|null
     */
    public function getMediaList()
    {
        return $this->container['media_list'];
    }

    /**
     * Sets media_list
     *
     * @param \com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyMediaListInner[]|null $media_list media_list
     *
     * @return self
     */
    public function setMediaList($media_list)
    {
        $this->container['media_list'] = $media_list;

        return $this;
    }

    /**
     * Gets geo
     *
     * @return \com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyGeo|null
     */
    public function getGeo()
    {
        return $this->container['geo'];
    }

    /**
     * Sets geo
     *
     * @param \com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyGeo|null $geo geo
     *
     * @return self
     */
    public function setGeo($geo)
    {
        $this->container['geo'] = $geo;

        return $this;
    }

    /**
     * Gets refinement_date
     *
     * @return float|null
     */
    public function getRefinementDate()
    {
        return $this->container['refinement_date'];
    }

    /**
     * Sets refinement_date
     *
     * @param float|null $refinement_date refinement_date
     *
     * @return self
     */
    public function setRefinementDate($refinement_date)
    {
        $this->container['refinement_date'] = $refinement_date;

        return $this;
    }

    /**
     * Gets published
     *
     * @return bool|null
     */
    public function getPublished()
    {
        return $this->container['published'];
    }

    /**
     * Sets published
     *
     * @param bool|null $published published
     *
     * @return self
     */
    public function setPublished($published)
    {
        $this->container['published'] = $published;

        return $this;
    }

    /**
     * Gets policy_list
     *
     * @return \com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyPolicyListInner[]|null
     */
    public function getPolicyList()
    {
        return $this->container['policy_list'];
    }

    /**
     * Sets policy_list
     *
     * @param \com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyPolicyListInner[]|null $policy_list policy_list
     *
     * @return self
     */
    public function setPolicyList($policy_list)
    {
        $this->container['policy_list'] = $policy_list;

        return $this;
    }

    /**
     * Gets uri
     *
     * @return string|null
     */
    public function getUri()
    {
        return $this->container['uri'];
    }

    /**
     * Sets uri
     *
     * @param string|null $uri uri
     *
     * @return self
     */
    public function setUri($uri)
    {
        $this->container['uri'] = $uri;

        return $this;
    }

    /**
     * Gets transaction
     *
     * @return \com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyTransaction|null
     */
    public function getTransaction()
    {
        return $this->container['transaction'];
    }

    /**
     * Sets transaction
     *
     * @param \com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyTransaction|null $transaction transaction
     *
     * @return self
     */
    public function setTransaction($transaction)
    {
        $this->container['transaction'] = $transaction;

        return $this;
    }

    /**
     * Gets cancellation_grace_period
     *
     * @return \com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyCancellationGracePeriod|null
     */
    public function getCancellationGracePeriod()
    {
        return $this->container['cancellation_grace_period'];
    }

    /**
     * Sets cancellation_grace_period
     *
     * @param \com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyCancellationGracePeriod|null $cancellation_grace_period cancellation_grace_period
     *
     * @return self
     */
    public function setCancellationGracePeriod($cancellation_grace_period)
    {
        $this->container['cancellation_grace_period'] = $cancellation_grace_period;

        return $this;
    }

    /**
     * Gets service_list
     *
     * @return \com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyServiceListInner[]|null
     */
    public function getServiceList()
    {
        return $this->container['service_list'];
    }

    /**
     * Sets service_list
     *
     * @param \com.lodgea\com.lodgea.model\V1PropertyGetPost200ResponsePropertyServiceListInner[]|null $service_list service_list
     *
     * @return self
     */
    public function setServiceList($service_list)
    {
        $this->container['service_list'] = $service_list;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


