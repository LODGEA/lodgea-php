<?php
/**
 * InlineResponse2003PropertyPolicyList
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  com.lodgea
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * lodgea-php
 *
 * LODGEA SDK for php. Check out https://docs.lodgea.io for more information.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support@lodgea.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace com.lodgea\com.lodgea.model;

use \ArrayAccess;
use \com.lodgea\ObjectSerializer;

/**
 * InlineResponse2003PropertyPolicyList Class Doc Comment
 *
 * @category Class
 * @package  com.lodgea
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class InlineResponse2003PropertyPolicyList implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'inline_response_200_3_property_policyList';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'check_in_time' => 'float',
        'check_out_time' => 'float',
        'total_guest_count' => 'float',
        'cancellation_policy_list' => '\com.lodgea\com.lodgea.model\InlineResponse2003PropertyCancellationPolicyList[]',
        'advance_booking_min' => 'float',
        'advance_booking_max' => 'float',
        'pets_policy' => '\com.lodgea\com.lodgea.model\InlineResponse2003PropertyPetsPolicy',
        'prepayment_policy' => 'string',
        'guarantee_policy' => '\com.lodgea\com.lodgea.model\InlineResponse2003PropertyGuaranteePolicy',
        'tax_policy_list' => '\com.lodgea\com.lodgea.model\InlineResponse2003PropertyTaxPolicyList[]',
        'fee_policy_list' => '\com.lodgea\com.lodgea.model\InlineResponse2003PropertyFeePolicyList[]',
        'name' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'check_in_time' => null,
        'check_out_time' => null,
        'total_guest_count' => null,
        'cancellation_policy_list' => null,
        'advance_booking_min' => null,
        'advance_booking_max' => null,
        'pets_policy' => null,
        'prepayment_policy' => null,
        'guarantee_policy' => null,
        'tax_policy_list' => null,
        'fee_policy_list' => null,
        'name' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'check_in_time' => 'checkInTime',
        'check_out_time' => 'checkOutTime',
        'total_guest_count' => 'totalGuestCount',
        'cancellation_policy_list' => 'cancellationPolicyList',
        'advance_booking_min' => 'advanceBookingMin',
        'advance_booking_max' => 'advanceBookingMax',
        'pets_policy' => 'petsPolicy',
        'prepayment_policy' => 'prepaymentPolicy',
        'guarantee_policy' => 'guaranteePolicy',
        'tax_policy_list' => 'taxPolicyList',
        'fee_policy_list' => 'feePolicyList',
        'name' => 'name'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'check_in_time' => 'setCheckInTime',
        'check_out_time' => 'setCheckOutTime',
        'total_guest_count' => 'setTotalGuestCount',
        'cancellation_policy_list' => 'setCancellationPolicyList',
        'advance_booking_min' => 'setAdvanceBookingMin',
        'advance_booking_max' => 'setAdvanceBookingMax',
        'pets_policy' => 'setPetsPolicy',
        'prepayment_policy' => 'setPrepaymentPolicy',
        'guarantee_policy' => 'setGuaranteePolicy',
        'tax_policy_list' => 'setTaxPolicyList',
        'fee_policy_list' => 'setFeePolicyList',
        'name' => 'setName'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'check_in_time' => 'getCheckInTime',
        'check_out_time' => 'getCheckOutTime',
        'total_guest_count' => 'getTotalGuestCount',
        'cancellation_policy_list' => 'getCancellationPolicyList',
        'advance_booking_min' => 'getAdvanceBookingMin',
        'advance_booking_max' => 'getAdvanceBookingMax',
        'pets_policy' => 'getPetsPolicy',
        'prepayment_policy' => 'getPrepaymentPolicy',
        'guarantee_policy' => 'getGuaranteePolicy',
        'tax_policy_list' => 'getTaxPolicyList',
        'fee_policy_list' => 'getFeePolicyList',
        'name' => 'getName'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    const PREPAYMENT_POLICY_CANCELLATION_FEE_BEGINS = 'after_cancellation_fee_begins';
    const PREPAYMENT_POLICY_RESERVATION_IS_MADE = 'after_reservation_is_made';

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getPrepaymentPolicyAllowableValues()
    {
        return [
            self::PREPAYMENT_POLICY_CANCELLATION_FEE_BEGINS,
            self::PREPAYMENT_POLICY_RESERVATION_IS_MADE,
        ];
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['check_in_time'] = $data['check_in_time'] ?? null;
        $this->container['check_out_time'] = $data['check_out_time'] ?? null;
        $this->container['total_guest_count'] = $data['total_guest_count'] ?? null;
        $this->container['cancellation_policy_list'] = $data['cancellation_policy_list'] ?? null;
        $this->container['advance_booking_min'] = $data['advance_booking_min'] ?? null;
        $this->container['advance_booking_max'] = $data['advance_booking_max'] ?? null;
        $this->container['pets_policy'] = $data['pets_policy'] ?? null;
        $this->container['prepayment_policy'] = $data['prepayment_policy'] ?? null;
        $this->container['guarantee_policy'] = $data['guarantee_policy'] ?? null;
        $this->container['tax_policy_list'] = $data['tax_policy_list'] ?? null;
        $this->container['fee_policy_list'] = $data['fee_policy_list'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['check_in_time'] === null) {
            $invalidProperties[] = "'check_in_time' can't be null";
        }
        if ($this->container['check_out_time'] === null) {
            $invalidProperties[] = "'check_out_time' can't be null";
        }
        if ($this->container['cancellation_policy_list'] === null) {
            $invalidProperties[] = "'cancellation_policy_list' can't be null";
        }
        if ($this->container['advance_booking_min'] === null) {
            $invalidProperties[] = "'advance_booking_min' can't be null";
        }
        if ($this->container['advance_booking_max'] === null) {
            $invalidProperties[] = "'advance_booking_max' can't be null";
        }
        $allowedValues = $this->getPrepaymentPolicyAllowableValues();
        if (!is_null($this->container['prepayment_policy']) && !in_array($this->container['prepayment_policy'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'prepayment_policy', must be one of '%s'",
                $this->container['prepayment_policy'],
                implode("', '", $allowedValues)
            );
        }

        if ($this->container['tax_policy_list'] === null) {
            $invalidProperties[] = "'tax_policy_list' can't be null";
        }
        if ($this->container['fee_policy_list'] === null) {
            $invalidProperties[] = "'fee_policy_list' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets check_in_time
     *
     * @return float
     */
    public function getCheckInTime()
    {
        return $this->container['check_in_time'];
    }

    /**
     * Sets check_in_time
     *
     * @param float $check_in_time Check-in time (unix timestamp in ms).
     *
     * @return self
     */
    public function setCheckInTime($check_in_time)
    {
        $this->container['check_in_time'] = $check_in_time;

        return $this;
    }

    /**
     * Gets check_out_time
     *
     * @return float
     */
    public function getCheckOutTime()
    {
        return $this->container['check_out_time'];
    }

    /**
     * Sets check_out_time
     *
     * @param float $check_out_time Check-out time (unix timestamp in ms).
     *
     * @return self
     */
    public function setCheckOutTime($check_out_time)
    {
        $this->container['check_out_time'] = $check_out_time;

        return $this;
    }

    /**
     * Gets total_guest_count
     *
     * @return float|null
     */
    public function getTotalGuestCount()
    {
        return $this->container['total_guest_count'];
    }

    /**
     * Sets total_guest_count
     *
     * @param float|null $total_guest_count The maximum number of guests allowed.
     *
     * @return self
     */
    public function setTotalGuestCount($total_guest_count)
    {
        $this->container['total_guest_count'] = $total_guest_count;

        return $this;
    }

    /**
     * Gets cancellation_policy_list
     *
     * @return \com.lodgea\com.lodgea.model\InlineResponse2003PropertyCancellationPolicyList[]
     */
    public function getCancellationPolicyList()
    {
        return $this->container['cancellation_policy_list'];
    }

    /**
     * Sets cancellation_policy_list
     *
     * @param \com.lodgea\com.lodgea.model\InlineResponse2003PropertyCancellationPolicyList[] $cancellation_policy_list List of cancellation policies.
     *
     * @return self
     */
    public function setCancellationPolicyList($cancellation_policy_list)
    {
        $this->container['cancellation_policy_list'] = $cancellation_policy_list;

        return $this;
    }

    /**
     * Gets advance_booking_min
     *
     * @return float
     */
    public function getAdvanceBookingMin()
    {
        return $this->container['advance_booking_min'];
    }

    /**
     * Sets advance_booking_min
     *
     * @param float $advance_booking_min The minimum number of days in advance a booking must be made
     *
     * @return self
     */
    public function setAdvanceBookingMin($advance_booking_min)
    {
        $this->container['advance_booking_min'] = $advance_booking_min;

        return $this;
    }

    /**
     * Gets advance_booking_max
     *
     * @return float
     */
    public function getAdvanceBookingMax()
    {
        return $this->container['advance_booking_max'];
    }

    /**
     * Sets advance_booking_max
     *
     * @param float $advance_booking_max The maximum number of days in advance a booking can be made
     *
     * @return self
     */
    public function setAdvanceBookingMax($advance_booking_max)
    {
        $this->container['advance_booking_max'] = $advance_booking_max;

        return $this;
    }

    /**
     * Gets pets_policy
     *
     * @return \com.lodgea\com.lodgea.model\InlineResponse2003PropertyPetsPolicy|null
     */
    public function getPetsPolicy()
    {
        return $this->container['pets_policy'];
    }

    /**
     * Sets pets_policy
     *
     * @param \com.lodgea\com.lodgea.model\InlineResponse2003PropertyPetsPolicy|null $pets_policy pets_policy
     *
     * @return self
     */
    public function setPetsPolicy($pets_policy)
    {
        $this->container['pets_policy'] = $pets_policy;

        return $this;
    }

    /**
     * Gets prepayment_policy
     *
     * @return string|null
     */
    public function getPrepaymentPolicy()
    {
        return $this->container['prepayment_policy'];
    }

    /**
     * Sets prepayment_policy
     *
     * @param string|null $prepayment_policy The type of the prepayment policy.
     *
     * @return self
     */
    public function setPrepaymentPolicy($prepayment_policy)
    {
        $allowedValues = $this->getPrepaymentPolicyAllowableValues();
        if (!is_null($prepayment_policy) && !in_array($prepayment_policy, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'prepayment_policy', must be one of '%s'",
                    $prepayment_policy,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['prepayment_policy'] = $prepayment_policy;

        return $this;
    }

    /**
     * Gets guarantee_policy
     *
     * @return \com.lodgea\com.lodgea.model\InlineResponse2003PropertyGuaranteePolicy|null
     */
    public function getGuaranteePolicy()
    {
        return $this->container['guarantee_policy'];
    }

    /**
     * Sets guarantee_policy
     *
     * @param \com.lodgea\com.lodgea.model\InlineResponse2003PropertyGuaranteePolicy|null $guarantee_policy guarantee_policy
     *
     * @return self
     */
    public function setGuaranteePolicy($guarantee_policy)
    {
        $this->container['guarantee_policy'] = $guarantee_policy;

        return $this;
    }

    /**
     * Gets tax_policy_list
     *
     * @return \com.lodgea\com.lodgea.model\InlineResponse2003PropertyTaxPolicyList[]
     */
    public function getTaxPolicyList()
    {
        return $this->container['tax_policy_list'];
    }

    /**
     * Sets tax_policy_list
     *
     * @param \com.lodgea\com.lodgea.model\InlineResponse2003PropertyTaxPolicyList[] $tax_policy_list A list of taxes and their policies.
     *
     * @return self
     */
    public function setTaxPolicyList($tax_policy_list)
    {
        $this->container['tax_policy_list'] = $tax_policy_list;

        return $this;
    }

    /**
     * Gets fee_policy_list
     *
     * @return \com.lodgea\com.lodgea.model\InlineResponse2003PropertyFeePolicyList[]
     */
    public function getFeePolicyList()
    {
        return $this->container['fee_policy_list'];
    }

    /**
     * Sets fee_policy_list
     *
     * @param \com.lodgea\com.lodgea.model\InlineResponse2003PropertyFeePolicyList[] $fee_policy_list A list of fees and their policies.
     *
     * @return self
     */
    public function setFeePolicyList($fee_policy_list)
    {
        $this->container['fee_policy_list'] = $fee_policy_list;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name The name of this policy.
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


